env:
  global:
    - REPO_DIR=matplotlib
    # Also see DAILY_COMMIT below
    # Keep this in sync with the value in .github/workflows/multibuild.yml
    - BUILD_COMMIT=v3.2.1
    # These variables filled in further below
    - BUILD_DEPENDS=
    - TEST_DEPENDS=
    - PLAT=x86_64
    - UNICODE_WIDTH=32
    - NP_BUILD_DEP=1.16
    - NP_TEST_DEP=1.16
    # Following generated with
    # travis encrypt -r MacPython/matplotlib-wheels \
    #     WHEELHOUSE_UPLOADER_SECRET=<the api key>
    - secure:
        "hKf07zeIRvEMH9qWUkkmFHu768HZdI+EOCO99KjsAjbwa7QdUSwZ9XZKCcyNiym5iyrIBWHywyEtO0wk/LsTxhNZGZQP0nJbyTSSy4VGMQmpIx1sVmDKtrykVJaxCfXqpYYDttBTC4TyvxW/3LyuqBfbU14R4uoSFY/mK+QIJ0A="
    # Matplotlib commit when running from master branch
    - DAILY_COMMIT=master

language: python
# Default Python version is usually 2.7
python: 3.7
dist: bionic
services: docker

jobs:
  include:
    - os: linux
      env:
        - MB_PYTHON_VERSION=3.7
        - NP_BUILD_DEP=1.16
        - NP_TEST_DEP=1.16
        - PLAT=i686
    - os: linux
      arch: arm64
      env:
        - MB_PYTHON_VERSION=3.7
        - NP_BUILD_DEP=1.19
        - NP_TEST_DEP=1.19
        - PLAT=aarch64
        - MB_ML_VER=2014
        - DOCKER_TEST_IMAGE=multibuild/xenial_{PLAT}
    - os: linux
      arch: arm64
      env:
        - MB_PYTHON_VERSION=3.8
        - NP_BUILD_DEP=1.19
        - NP_TEST_DEP=1.19
        - PLAT=aarch64
        - MB_ML_VER=2014
        - DOCKER_TEST_IMAGE=multibuild/xenial_{PLAT}
    - os: linux
      arch: arm64
      env:
        - MB_PYTHON_VERSION=3.9
        - NP_BUILD_DEP=1.19
        - NP_TEST_DEP=1.19
        - PLAT=aarch64
        - MB_ML_VER=2014
        - DOCKER_TEST_IMAGE=multibuild/xenial_{PLAT}


before_install:
  # See:
  # https://github.com/travis-ci/travis-ci/issues/8920#issuecomment-352661024
  - python -c "import fcntl; fcntl.fcntl(1, fcntl.F_SETFL, 0)"
  - if [ "$TRAVIS_BRANCH" == "master" ]; then
        CONTAINER="pre-release";
        BUILD_COMMIT=${DAILY_COMMIT:-$BUILD_COMMIT};
    else
        CONTAINER=wheels;
        UPLOAD_ARGS="--no-update-index";
    fi
  - BUILD_DEPENDS="numpy==$NP_BUILD_DEP"
  - source multibuild/common_utils.sh
  - source multibuild/travis_steps.sh
  - before_install

install:
  # Maybe get and clean and patch source
  - clean_code $REPO_DIR $BUILD_COMMIT
  - build_wheel $REPO_DIR $PLAT
  # Remove test images
  - pip install delocate
  - python rm_test_images.py wheelhouse/*.whl

script:
  - TEST_DEPENDS="numpy==$NP_TEST_DEP sphinx pytest pytest-timeout pytest-xdist pytest-faulthandler pytest-rerunfailures requests[security]"
  # increase number of open files allowed for tests, on OSX
  # https://github.com/matplotlib/matplotlib/issues/3315
  - ulimit -n 4096
  - install_run $PLAT

after_success:
  # trigger an upload to the shared ecosystem
  # infrastructure at: https://anaconda.org/scipy-wheels-nightly
  # for cron jobs only (restricted to master branch once
  # per week)
  # MATPLOTLIB_WHEELS_NIGHTLY is a secret token
  # used in Travis CI config, originally
  # generated at anaconda.org for scipy-wheels-nightly
  - if [ "$TRAVIS_EVENT_TYPE" == "cron" ]; then
        source extra_functions.sh;
        for f in wheelhouse/*.whl; do rename_wheel $f; done;
        ANACONDA_ORG="scipy-wheels-nightly";
        pip install git+https://github.com/Anaconda-Server/anaconda-client;
        anaconda -t ${SCIPY_WHEELS_NIGHTLY_ACCESS} upload --force -u ${ANACONDA_ORG} ${TRAVIS_BUILD_DIR}/wheelhouse/*.whl;
    fi
  # for merges (push events) we use the staging area instead;
  # MATPLOTLIB_STAGING_UPLOAD_TOKEN is a secret token used in Travis
  # CI config, originally generated at anaconda.org for
  # multibuild-wheels-staging
  - if [ "$TRAVIS_EVENT_TYPE" == "push" ]; then
        ANACONDA_ORG="multibuild-wheels-staging";
        pip install git+https://github.com/Anaconda-Server/anaconda-client;
        anaconda -t ${MULTIBUILD_WHEELS_STAGING_ACCESS} upload --force -u ${ANACONDA_ORG} ${TRAVIS_BUILD_DIR}/wheelhouse/*.whl;
    fi
